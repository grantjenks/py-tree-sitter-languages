index = {'bash': {'file-types': ['sh', 'bash', 'zsh'], 'scope': 'source.bash'},
 'c': {'file-types': ['c', 'h'], 'scope': 'source.c'},
 'c_sharp': {'file-types': ['cs'], 'scope': 'source.cs'},
 'commonlisp': {},
 'cpp': {'file-types': ['cc', 'cpp', 'hpp', 'h'],
         'highlights': ['queries/highlights.scm',
                        'node_modules/tree-sitter-c/queries/highlights.scm'],
         'scope': 'source.cpp'},
 'css': {'file-types': ['css'],
         'injection-regex': '^css$',
         'scope': 'source.css'},
 'dockerfile': {},
 'dot': {'file-types': ['dot', 'gv'], 'scope': 'source.dot'},
 'elisp': {'file-types': ['el'], 'scope': 'source.emacs.lisp'},
 'elixir': {'file-types': ['ex', 'exs'],
            'injection-regex': '^(ex|elixir)$',
            'scope': 'source.elixir'},
 'elm': {'file-types': ['elm'], 'scope': 'source.elm'},
 'embedded_template': {'file-types': ['erb'],
                       'injection-regex': 'erb',
                       'injections': 'queries/injections-erb.scm',
                       'scope': 'text.html.erb'},
 'erlang': {},
 'go': {'file-types': ['go'], 'scope': 'source.go'},
 'gomod': {},
 'hack': {'file-types': ['hack'],
          'first-line-regex': '^((<\\?hh.*)|(#!.+ hhvm))',
          'scope': 'source.hack'},
 'haskell': {'file-types': ['hs'],
             'highlights': ['queries/highlights.scm'],
             'injection-regex': '^(hs|haskell)$',
             'scope': 'source.haskell'},
 'hcl': {'file-types': ['hcl'], 'scope': 'source.hcl'},
 'html': {'file-types': ['html'],
          'injection-regex': 'html',
          'scope': 'text.html.basic'},
 'java': {'file-types': ['java'], 'scope': 'source.java'},
 'javascript': {'file-types': ['js'],
                'highlights': ['queries/highlights-jsx.scm',
                               'queries/highlights-params.scm',
                               'queries/highlights.scm'],
                'injection-regex': '^(js|javascript)$',
                'scope': 'source.js'},
 'jsdoc': {'injection-regex': 'jsdoc', 'scope': 'text.jsdoc'},
 'json': {'file-types': ['json'], 'scope': 'source.json'},
 'julia': {'file-types': ['jl'], 'scope': 'source.julia'},
 'kotlin': {},
 'lua': {'file-types': ['lua'], 'scope': 'source.lua'},
 'make': {'file-types': ['makefile',
                         'Makefile',
                         'MAKEFILE',
                         'GNUmakefile',
                         'mk',
                         'mak',
                         'dsp'],
          'scope': 'source.mk'},
 'markdown': {},
 'objc': {'file-types': ['h', 'm'],
          'highlights': ['queries/highlights.scm',
                         'node_modules/tree-sitter-c/queries/highlights.scm'],
          'scope': 'source.objc'},
 'ocaml': {'file-types': ['ml'],
           'first-line-regex': '',
           'injection-regex': '^(ocaml|ml)$',
           'path': 'ocaml',
           'scope': 'source.ocaml'},
 'perl': {'file-types': ['pl'], 'scope': 'source.perl'},
 'php': {'file-types': ['php'],
         'highlights': 'queries/highlights.scm',
         'scope': 'source.php'},
 'python': {'file-types': ['py'], 'scope': 'source.python'},
 'ql': {'file-types': ['ql', 'qll'], 'scope': 'source.ql'},
 'r': {'file-types': ['R', 'r'],
       'first-line-regex': '#!.*\\bRscript$',
       'scope': 'source.R'},
 'regex': {'injection-regex': '^regex$', 'scope': 'source.regex'},
 'rst': {'file-types': ['rst'], 'injection-regex': 'rst', 'scope': 'text.rst'},
 'ruby': {'file-types': ['rb'],
          'injection-regex': 'ruby',
          'scope': 'source.ruby'},
 'rust': {'file-types': ['rs'],
          'injection-regex': 'rust',
          'scope': 'source.rust'},
 'scala': {'file-types': ['scala'], 'scope': 'source.scala'},
 'sql': {'file-types': ['sql'], 'scope': 'source.sql'},
 'sqlite': {'file-types': ['sql'],
            'highlights': 'queries/highlights.scm',
            'injection-regex': '^(sql)$',
            'scope': 'source.sql'},
 'toml': {'file-types': ['toml'],
          'highlights': ['queries/highlights.scm'],
          'injection-regex': '^toml$',
          'scope': 'source.toml'},
 'tsq': {'file-types': ['tsq', 'scm'], 'scope': 'scope.tsq'},
 'tsx': {'content-regex': '@flow',
         'file-types': ['js'],
         'highlights': ['queries/highlights.scm',
                        'node_modules/tree-sitter-javascript/queries/highlights-jsx.scm',
                        'node_modules/tree-sitter-javascript/queries/highlights.scm'],
         'injections': 'node_modules/tree-sitter-javascript/queries/injections.scm',
         'locals': 'node_modules/tree-sitter-javascript/queries/locals.scm',
         'path': 'tsx',
         'scope': 'source.js.flow',
         'tags': ['queries/tags.scm',
                  'node_modules/tree-sitter-javascript/queries/tags.scm']},
 'typescript': {'file-types': ['ts'],
                'highlights': ['queries/highlights.scm',
                               'node_modules/tree-sitter-javascript/queries/highlights.scm'],
                'injection-regex': '^(ts|typescript)$',
                'injections': 'node_modules/tree-sitter-javascript/queries/injections.scm',
                'locals': ['queries/locals.scm',
                           'node_modules/tree-sitter-javascript/queries/locals.scm'],
                'path': 'typescript',
                'scope': 'source.ts',
                'tags': ['queries/tags.scm',
                         'node_modules/tree-sitter-javascript/queries/tags.scm']},
 'yaml': {}}
