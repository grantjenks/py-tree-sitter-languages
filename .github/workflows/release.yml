name: release

on:
  push:
    tags:
      - v*
  pull_request:

jobs:
  builds:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        CIBW_BUILD:
          # - cp36-*
          - cp37-*
          - cp38-*
          - cp39-*
          - cp310-*
          - cp311-*
          - cp312-*

        CIBW_ARCHS:
          # autobuilds
          - auto64
          - auto32
          # apple silicon
          - arm64
          # add windows arm64
          - ARM64
          # linux other archs
          - aarch64
          - ppc64le
          - s390x

        exclude:
          # exclude mac os specific exclusions
          - os: ubuntu-latest
            CIBW_ARCHS: arm64
          - os: windows-latest
            CIBW_ARCHS: arm64
          # windows specific exclusions
          - os: ubuntu-latest
            CIBW_ARCHS: ARM64
          - os: macos-latest
            CIBW_ARCHS: ARM64
          # linux specific exclusions
          - os: macos-latest
            CIBW_ARCHS: aarch64
          - os: macos-latest
            CIBW_ARCHS: ppc64le
          - os: macos-latest
            CIBW_ARCHS: s390x
          - os: windows-latest
            CIBW_ARCHS: aarch64
          - os: windows-latest
            CIBW_ARCHS: ppc64le
          - os: windows-latest
            CIBW_ARCHS: s390x
          # macos does not support 32-bit builds
          - os: macos-latest
            CIBW_ARCHS: auto32
          # apple silicon support only came from python 3.8
          - os: macos-latest
            CIBW_ARCHS: arm64
            CIBW_BUILD: cp36-*
          - os: macos-latest
            CIBW_ARCHS: arm64
            CIBW_BUILD: cp37-*
          # windows ARM64 is from version 3.9
          - os: windows-latest
            CIBW_ARCHS: ARM64
            CIBW_BUILD: cp36-*
          - os: windows-latest
            CIBW_ARCHS: ARM64
            CIBW_BUILD: cp37-*
          - os: windows-latest
            CIBW_ARCHS: ARM64
            CIBW_BUILD: cp38-*

        # specific archs excluded by auto builds
        include:
          # additional archs for linux
          - os: ubuntu-latest
            CIBW_ARCHS: aarch64
          - os: ubuntu-latest
            CIBW_ARCHS: ppc64le
          - os: ubuntu-latest
            CIBW_ARCHS: s390x
          # additional archs for windows
          - os: windows-latest
            CIBW_ARCHS: ARM64
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: 'linux/ppc64le,linux/s390x,linux/386,linux/arm64,linux/arm/v7,linux/arm/v6'

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.16.5
        env:
          CIBW_BEFORE_BUILD: pip install cython==3.0.8 && pip install -e . && python build.py
          CIBW_TEST_REQUIRES: pytest
          CIBW_TEST_COMMAND: pytest --showlocals {package}/tests
          CIBW_BUILD: ${{ matrix.CIBW_BUILD }}
          CIBW_ARCHS: ${{ matrix.CIBW_ARCHS }}

      - name: Generate random artifact name
        id: artifact
        shell: pwsh
        run: |
          $artifactName = [guid]::NewGuid().ToString()
          Write-Output "artifact_name=$artifactName" >> $env:GITHUB_OUTPUT

      - uses: actions/upload-artifact@v4
        with:
          name: wheelhouse-${{ matrix.os }}-${{ matrix.CIBW_ARCHS }}-${{ steps.artifact.outputs.artifact_name }}
          path: ./wheelhouse/*.whl

  upload:
    # Skip this step on pull requests. Run only when pushing a version tag.
    if: startsWith(github.ref, 'refs/tags/v')
    needs: builds
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true

    - name: Stage wheels
      uses: actions/download-artifact@v4
      with:
        pattern: wheelhouse-*
        path: wheelhouse
        merge-multiple: true

    - name: Move wheels to dist folder
      run: |
        mkdir dist
        mv -v wheelhouse/* dist/
        ls -l dist/

    - name: Publish package
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
       user: __token__
       password: ${{ secrets.PYPI_API_TOKEN }}
